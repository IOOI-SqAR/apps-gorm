<?xml version="1.0"?>
<!DOCTYPE gsdoc PUBLIC "-//GNUstep//DTD gsdoc 1.0.4//EN" "http://www.gnustep.org/gsdoc-1_0_4.dtd">
<gsdoc base="GormDocument">
  <head>
    <title>GormDocument documentation</title>
    <author name="Generated by heron"></author>
  </head>
  <body>
    <front><contents /></front>
    <chapter>
      <heading>
        Software documentation for the GormDocument class
      </heading>
      <class name="GormDocument" super="NSDocument">
        <declared>GormCore/GormDocument.h</declared>
        <conform>IBDocuments</conform>
        <conform>GSNibContainer</conform>
        <conform>NSCoding</conform>
        <conform>NSXMLParserDelegate</conform>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
        <ivariable type="GormClassManager*" name="classManager" validity="protected">
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </ivariable>
        <ivariable type="NSScrollView*" name="classesScrollView" validity="protected">
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </ivariable>
        <ivariable type="id" name="classesView" validity="protected">
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </ivariable>
        <ivariable type="NSMutableArray*" name="connections" validity="protected">
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </ivariable>
        <ivariable type="NSMutableSet*" name="deferredWindows" validity="protected">
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </ivariable>
        <ivariable type="GormFilePrefsManager*" name="filePrefsManager" validity="protected">
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </ivariable>
        <ivariable type="id" name="filePrefsView" validity="protected">
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </ivariable>
        <ivariable type="NSWindow*" name="filePrefsWindow" validity="protected">
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </ivariable>
        <ivariable type="GormFilesOwner*" name="filesOwner" validity="protected">
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </ivariable>
        <ivariable type="GormFirstResponder*" name="firstResponder" validity="protected">
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </ivariable>
        <ivariable type="GormObjectProxy*" name="fontManager" validity="protected">
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </ivariable>
        <ivariable type="NSMutableArray*" name="hidden" validity="protected">
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </ivariable>
        <ivariable type="NSMutableArray*" name="images" validity="protected">
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </ivariable>
        <ivariable type="NSScrollView*" name="imagesScrollView" validity="protected">
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </ivariable>
        <ivariable type="id" name="imagesView" validity="protected">
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </ivariable>
        <ivariable type="NSData*" name="infoData" validity="protected">
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </ivariable>
        <ivariable type="BOOL" name="isActive" validity="protected">
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </ivariable>
        <ivariable type="BOOL" name="isDocumentOpen" validity="protected">
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </ivariable>
        <ivariable type="BOOL" name="isOlderArchive" validity="protected">
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </ivariable>
        <ivariable type="id" name="lastEditor" validity="protected">
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </ivariable>
        <ivariable type="NSMutableDictionary*" name="nameTable" validity="protected">
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </ivariable>
        <ivariable type="NSMapTable*" name="objToName" validity="protected">
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </ivariable>
        <ivariable type="id" name="objectsView" validity="protected">
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </ivariable>
        <ivariable type="NSMutableArray*" name="openEditors" validity="protected">
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </ivariable>
        <ivariable type="NSMenuItem*" name="quitItem" validity="protected">
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </ivariable>
        <ivariable type="NSMutableArray*" name="resourceManagers" validity="protected">
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </ivariable>
        <ivariable type="NSMutableArray*" name="savedEditors" validity="protected">
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </ivariable>
        <ivariable type="NSMenu*" name="savedMenu" validity="protected">
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </ivariable>
        <ivariable type="NSFileWrapper*" name="scmWrapper" validity="protected">
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </ivariable>
        <ivariable type="NSScrollView*" name="scrollView" validity="protected">
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </ivariable>
        <ivariable type="NSBox*" name="selectionBox" validity="protected">
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </ivariable>
        <ivariable type="NSMutableArray*" name="sounds" validity="protected">
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </ivariable>
        <ivariable type="NSScrollView*" name="soundsScrollView" validity="protected">
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </ivariable>
        <ivariable type="id" name="soundsView" validity="protected">
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </ivariable>
        <ivariable type="NSToolbar*" name="toolbar" validity="protected">
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </ivariable>
        <ivariable type="NSMutableSet*" name="topLevelObjects" validity="protected">
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </ivariable>
        <ivariable type="NSMutableSet*" name="visibleWindows" validity="protected">
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </ivariable>
        <ivariable type="GormDocumentWindow*" name="window" validity="protected">
          <desc>
            <em>Description forthcoming.</em>
          </desc>
        </ivariable>
        <method type="id">
          <sel>addAttributeToClass:</sel>
          <arg type="id">sender</arg>
          <desc>
            Add attribute to class <br /> Add an outlet/action to
            the classes view.
          </desc>
        </method>
        <method type="void">
          <sel>addConnector:</sel>
          <arg type="id&lt;IBConnectors&gt;">aConnector</arg>
          <desc>
            Add <var>aConnector</var> to the set of connectors in
            this document.
          </desc>
        </method>
        <method type="void">
          <sel>alignSelectedObjects:</sel>
          <arg type="id">sender</arg>
          <desc>
            Aligns selected objects on a given axis. <br />
            Align objects to center, left, right, top, bottom.
          </desc>
        </method>
        <method type="NSArray*">
          <sel>allManagedPboardTypes</sel>
          <desc>
            Returns all pasteboard types registered for with
            the IBResourceManager. <br /> Get all pasteboard types
            managed by the resource manager.
          </desc>
        </method>
        <method type="void">
          <sel>arrangeSelectedObjects:</sel>
          <arg type="id">sender</arg>
          <desc>
            Arrages selected objects based on the either in
            front of or in back of the view stack. <br /> Arrange
            views in front or in back of one another.
          </desc>
        </method>
        <method type="void">
          <sel>changeToTopLevelEditorAcceptingTypes:</sel>
          <arg type="NSArray*">types</arg>
          <sel>andFileType:</sel>
          <arg type="NSString*">fileType</arg>
          <desc>
            Switch to the top level editor responsible for a
            given type. This allows the document in the view to
            switch to the view which is appropriate for the
            resource being dragged in.
          </desc>
        </method>
        <method type="void">
          <sel>changeToViewWithTag:</sel>
          <arg type="int">tag</arg>
          <desc>
            Switches to the view using the specified
            <var>tag</var>. They are 0=objects, 1=images,
            2=sounds, 3=classes, 4=file prefs.
          </desc>
        </method>
        <method type="BOOL">
          <sel>classIsSelected</sel>
          <desc>
            Returns <code>YES</code> if a class is selected in
            the view <br /> Returns <code>YES</code>, if the
            current select on the classes view is a class.
          </desc>
        </method>
        <method type="GormClassManager*">
          <sel>classManager</sel>
          <desc>
            Shared class manager <br /> The class manager.
          </desc>
        </method>
        <method type="void">
          <sel>closeAllEditors</sel>
          <desc>
            Forces the closing of all editors in the document.
          </desc>
        </method>
        <method type="NSMutableArray*">
          <sel>connections</sel>
          <desc>
            All of the connections...
          </desc>
        </method>
        <method type="id">
          <sel>createClassFiles:</sel>
          <arg type="id">sender</arg>
          <desc>
            Generate the class files for the selected class
            <br /> Create the class files for the selected
            class.
          </desc>
        </method>
        <method type="void">
          <sel>createResourceManagers</sel>
          <desc>
            Create resource manager instances for all registered
            classes.
          </desc>
        </method>
        <method type="id">
          <sel>createSubclass:</sel>
          <arg type="id">sender</arg>
          <desc>
            Create a subclass of the selected class <br />
            Create a subclass of the currently selected class in
            the classes view.
          </desc>
        </method>
        <method type="void">
          <sel>deactivateEditors</sel>
          <desc>
            Deactivate the editors for archiving..
          </desc>
        </method>
        <method type="NSSet*">
          <sel>deferredWindows</sel>
          <desc>
            Windows deferred. <br /> All windows marked,
            deferred.
          </desc>
        </method>
        <method type="void">
          <sel>exportStringsToFile:</sel>
          <arg type="NSString*">filename</arg>
          <desc>
            Export the strings from receiver to the file
            indicated by 'filename'.
          </desc>
        </method>
        <method type="GormFilePrefsManager*">
          <sel>filePrefsManager</sel>
          <desc>
            File preferences. <br /> Gorm file prefs manager.
          </desc>
        </method>
        <method type="GormFilesOwner*">
          <sel>filesOwner</sel>
          <desc>
            File's Owner <br /> File's owner...
          </desc>
        </method>
        <method type="id">
          <sel>firstResponder</sel>
          <desc>
            Returns stand-in object for firstResponder <br />
            Return first responder stand in.
          </desc>
        </method>
        <method type="id">
          <sel>fontManager</sel>
          <desc>
            Returns stand-in object for fontManager. <br />
            Return font manager stand in.
          </desc>
        </method>
        <method type="NSMenu*">
          <sel>fontMenu</sel>
          <desc>
            Returns the font menu for the document. <br />
            Return the object that will be the services menu.
          </desc>
        </method>
        <method type="void">
          <sel>handleNotification:</sel>
          <arg type="NSNotification*">aNotification</arg>
          <desc>
            Handle all notifications. Checks the value of [
            <var>aNotification</var> name] against the set of
            notifications this class responds to and
            takes appropriate action.
          </desc>
        </method>
        <method type="NSArray*">
          <sel>images</sel>
          <desc>
            Images
          </desc>
        </method>
        <method type="void">
          <sel>importStringsFromFile:</sel>
          <arg type="NSString*">filename</arg>
          <desc>
            Load a given file into the reciever using `filename'.
          </desc>
        </method>
        <method type="NSData*">
          <sel>infoData</sel>
          <desc>
            return the file info.
          </desc>
        </method>
        <method type="id">
          <sel>instantiateClass:</sel>
          <arg type="id">sender</arg>
          <desc>
            Instantiate the selected class <br /> Create an
            instance of a given class.
          </desc>
        </method>
        <method type="BOOL">
          <sel>isActive</sel>
          <desc>
            Returns <code>YES</code>, if document is active.
          </desc>
        </method>
        <method type="BOOL">
          <sel>isDocumentOpen</sel>
          <desc>
            Return the document open flag.
          </desc>
        </method>
        <method type="BOOL">
          <sel>isOlderArchive</sel>
          <desc>
            Return <code>YES</code> if this is an older archive.
          </desc>
        </method>
        <method type="BOOL">
          <sel>isTopLevelObject:</sel>
          <arg type="id">obj</arg>
          <desc>
            Returns <code>YES</code>, if <var>obj</var> is a
            top level object.
          </desc>
        </method>
        <method type="id">
          <sel>loadClass:</sel>
          <arg type="id">sender</arg>
          <desc>
            Load a class into the document. <br /> Parse a header
            into the classes view.
          </desc>
        </method>
        <method type="NSString*">
          <sel>nameForObject:</sel>
          <arg type="id">anObject</arg>
          <desc>
            Returns the name for the object... <br /> Returns
            the name for <var>anObject</var>.
          </desc>
        </method>
        <method type="id">
          <sel>objectForName:</sel>
          <arg type="NSString*">name</arg>
          <desc>
            Returns the object for <var>name</var>.
          </desc>
        </method>
        <method type="BOOL">
          <sel>objectIsDeferred:</sel>
          <arg type="id">anObject</arg>
          <desc>
            Return <code>YES</code>, if <var>anObject</var> is
            deferred. <br /> Return <code>YES</code>, if the
            <var>anObject</var> is in the deferred list.
          </desc>
        </method>
        <method type="BOOL">
          <sel>objectIsVisibleAtLaunch:</sel>
          <arg type="id">anObject</arg>
          <desc>
            Return <code>YES</code>, if <var>anObject</var> is
            visible at launch time.
          </desc>
        </method>
        <method type="NSArray*">
          <sel>objects</sel>
          <desc>
            Returns all names for all objects known to Gorm.
            <br /> Returns all objects in the document.
          </desc>
        </method>
        <method type="id&lt;IBEditors&gt;">
          <sel>openEditorForObject:</sel>
          <arg type="id">anObject</arg>
          <sel>withParentObject:</sel>
          <arg type="id">parentObj</arg>
          <desc>
            Open the editor for <var>anObject</var>, with parent
            object.
          </desc>
        </method>
        <method type="id">
          <sel>openImage:</sel>
          <arg type="id">sender</arg>
          <desc>
            Open an image and copy it into the document.
          </desc>
        </method>
        <method type="id">
          <sel>openSound:</sel>
          <arg type="id">sender</arg>
          <desc>
            Open a sound and load it into the document.
          </desc>
        </method>
        <method type="void">
          <sel>reactivateEditors</sel>
          <desc>
            Reactivate all of the editors...
          </desc>
        </method>
        <method type="void">
          <sel>rebuildObjToNameMapping</sel>
          <desc>
            Build our reverse mapping information and other
            initialisation
          </desc>
        </method>
        <method type="NSMenu*">
          <sel>recentDocumentsMenu</sel>
          <desc>
            Returns the menu which will be the recent documents
            menu for the document. <br /> Return the object that
            will be the receent documents menu.
          </desc>
        </method>
        <method type="void">
          <sel>refreshConnectionsForClassNamed:</sel>
          <arg type="NSString*">className</arg>
          <desc>
            Refresh all connections to any and all instances of
            <var>className</var>. Checks if the class has the
            action/outlet present and deletes it, if it
            doesn't.
          </desc>
        </method>
        <method type="id">
          <sel>remove:</sel>
          <arg type="id">sender</arg>
          <desc>
            Remove the selected class <br /> Remove a class from
            the classes view
          </desc>
        </method>
        <method type="void">
          <sel>removeAllInstancesOfClass:</sel>
          <arg type="NSString*">classNamed</arg>
          <desc>
            Removes all instances of class named
            <var>classNamed</var> <br /> Remove all instances of
            a given class.
          </desc>
        </method>
        <method type="BOOL">
          <sel>removeConnectionsForClassNamed:</sel>
          <arg type="NSString*">name</arg>
          <desc>
            Remove all connections to any and all instances of
            className.
          </desc>
        </method>
        <method type="BOOL">
          <sel>removeConnectionsWithLabel:</sel>
          <arg type="NSString*">name</arg>
          <sel>forClassNamed:</sel>
          <arg type="NSString*">className</arg>
          <sel>isAction:</sel>
          <arg type="BOOL">action</arg>
          <desc>
            Removes all connections given <var>action</var> or
            outlet with the specified label (paramter
            <var>name</var>) class <var>name</var> (parameter
            <var>className</var>).
          </desc>
        </method>
        <method type="BOOL">
          <sel>renameConnectionsForClassNamed:</sel>
          <arg type="NSString*">name</arg>
          <sel>toName:</sel>
          <arg type="NSString*">newName</arg>
          <desc>
            Rename connections connected to an instance of on
            class to another.
          </desc>
        </method>
        <method type="IBResourceManager*">
          <sel>resourceManagerForPasteboard:</sel>
          <arg type="NSPasteboard*">pboard</arg>
          <desc>
            Get the resource manager which handles the content on
            <var>pboard</var>.
          </desc>
        </method>
        <method type="NSArray*">
          <sel>resourceManagers</sel>
          <desc>
            The list of all resource managers.
          </desc>
        </method>
        <method type="NSArray*">
          <sel>retrieveObjectsForParent:</sel>
          <arg type="id">parent</arg>
          <sel>recursively:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            Retrieve all objects which have <var>parent</var>
            as thier <var>parent</var>. If <var>flag</var> is
            <code>YES</code>, then retrieve the entire graph of
            objects starting with the <var>parent</var>. <br />
            Pull all of the objects which are under a given
            <var>parent</var>. Returns an autoreleased array.
          </desc>
        </method>
        <method type="NSFileWrapper*">
          <sel>scmWrapper</sel>
          <desc>
            Save the SCM directory.
          </desc>
        </method>
        <method type="void">
          <sel>selectClass:</sel>
          <arg type="NSString*">className</arg>
          <desc>
            Select class named <var>className</var> <br />
            Select a class in the classes view
          </desc>
        </method>
        <method type="void">
          <sel>selectClass:</sel>
          <arg type="NSString*">className</arg>
          <sel>editClass:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            Select class named <var>className</var> and edit it
            if <var>flag</var> is <code>YES</code> <br /> Select a
            class in the classes view
          </desc>
        </method>
        <method type="NSMenu*">
          <sel>servicesMenu</sel>
          <desc>
            Returns the services menu for the document. <br />
            Return the object that will be the services menu.
          </desc>
        </method>
        <method type="void">
          <sel>setDocumentActive:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            Marks this document as the currently active document.
            The active document is the one being edited by the
            user.
          </desc>
        </method>
        <method type="void">
          <sel>setDocumentOpen:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            Set the document open <var>flag</var>.
          </desc>
        </method>
        <method type="void">
          <sel>setFontMenu:</sel>
          <arg type="NSMenu*">menu</arg>
          <desc>
            Set the font <var>menu</var>. <br /> Set the object
            that will be the font <var>menu</var> in the app.
          </desc>
        </method>
        <method type="void">
          <sel>setImages:</sel>
          <arg type="NSArray*">imgs</arg>
          <desc>
            Images
          </desc>
        </method>
        <method type="void">
          <sel>setInfoData:</sel>
          <arg type="NSData*">data</arg>
          <desc>
            Set the file info for this document.
          </desc>
        </method>
        <method type="void">
          <sel>setObject:</sel>
          <arg type="id">anObject</arg>
          <sel>isDeferred:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            Add object to the defferred list. <br /> Add
            <var>anObject</var> to the deferred list.
          </desc>
        </method>
        <method type="void">
          <sel>setObject:</sel>
          <arg type="id">anObject</arg>
          <sel>isVisibleAtLaunch:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            Add object to the visible at launch list.
          </desc>
        </method>
        <method type="void">
          <sel>setOlderArchive:</sel>
          <arg type="BOOL">flag</arg>
          <desc>
            Set the "older archive" <var>flag</var>.
          </desc>
        </method>
        <method type="void">
          <sel>setRecentDocumentsMenu:</sel>
          <arg type="NSMenu*">menu</arg>
          <desc>
            Sets the recent documents <var>menu</var>. <br /> Set
            the <var>menu</var> that will be the recent documents
            <var>menu</var> in the app.
          </desc>
        </method>
        <method type="void">
          <sel>setSCMWrapper:</sel>
          <arg type="NSFileWrapper*">wrapper</arg>
          <desc>
            Save the SCM directory.
          </desc>
        </method>
        <method type="void">
          <sel>setServicesMenu:</sel>
          <arg type="NSMenu*">menu</arg>
          <desc>
            Set the services <var>menu</var>. <br /> Set the object
            that will be the services <var>menu</var> in the app.
          </desc>
        </method>
        <method type="void">
          <sel>setSounds:</sel>
          <arg type="NSArray*">snds</arg>
          <desc>
            Sounds
          </desc>
        </method>
        <method type="void">
          <sel>setWindowsMenu:</sel>
          <arg type="NSMenu*">menu</arg>
          <desc>
            Sets the windows <var>menu</var>. <br /> Set the
            windows <var>menu</var>.
          </desc>
        </method>
        <method type="NSArray*">
          <sel>sounds</sel>
          <desc>
            Sounds
          </desc>
        </method>
        <method type="NSMutableSet*">
          <sel>topLevelObjects</sel>
          <desc>
            Returns a set containing the top level objects for
            this document. <br /> All top level objects.
          </desc>
        </method>
        <method type="NSArray*">
          <sel>validate</sel>
          <desc>
            Returns an array of issues. If document is valid
            the array should be empty.
          </desc>
        </method>
        <method type="NSView*">
          <sel>viewWithTag:</sel>
          <arg type="int">tag</arg>
          <desc>
            returns the view using the specified <var>tag</var>
            . They are 0=objects, 1=images, 2=sounds, 3=classes,
            4=file prefs.
          </desc>
        </method>
        <method type="NSSet*">
          <sel>visibleWindows</sel>
          <desc>
            Windows visible at launch... <br /> All windows
            marked, visible at launch.
          </desc>
        </method>
        <method type="NSWindow*">
          <sel>window</sel>
          <desc>
            The document window.
          </desc>
        </method>
        <method type="NSWindow*">
          <sel>windowAndRect:</sel>
          <arg type="NSRect*">r</arg>
          <sel>forObject:</sel>
          <arg type="id">object</arg>
          <desc>
            WindowAndRect:forObject: is called
            by Gorm to determine where it should draw selection
            markup <br /> Returns the window and the rect
            <var>r</var> for <var>object</var>.
          </desc>
        </method>
        <method type="NSMenu*">
          <sel>windowsMenu</sel>
          <desc>
            Returns the menu which will be the windows menu for
            the document. <br /> return the windows menu.
          </desc>
        </method>
      </class>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the GormEditorToParent
        class
      </heading>
      <class name="GormEditorToParent" super="NSNibConnector">
        <declared>GormCore/GormDocument.h</declared>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </class>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the GormFirstResponder
        class
      </heading>
      <class name="GormFirstResponder" super="NSObject">
        <declared>GormCore/GormDocument.h</declared>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </class>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the GormObjectToEditor
        class
      </heading>
      <class name="GormObjectToEditor" super="NSNibConnector">
        <declared>GormCore/GormDocument.h</declared>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
      </class>
    </chapter>
    <chapter>
      <heading>
        Software documentation for the
        GormDocument(MenuValidation)
        category
      </heading>
      <category name="MenuValidation" class="GormDocument">
        <declared>GormCore/GormDocument.h</declared>
        <desc>
          <em>Description forthcoming.</em>
        </desc>
        <method type="BOOL">
          <sel>isEditingClasses</sel>
          <desc>
            Returns <code>YES</code> if the document is editing
            classes.
          </desc>
        </method>
        <method type="BOOL">
          <sel>isEditingImages</sel>
          <desc>
            Returns <code>YES</code> if the document is editing
            images.
          </desc>
        </method>
        <method type="BOOL">
          <sel>isEditingObjects</sel>
          <desc>
            Returns <code>YES</code> if the document is editing
            instance/objects.
          </desc>
        </method>
        <method type="BOOL">
          <sel>isEditingSounds</sel>
          <desc>
            Returns <code>YES</code> if the document is editing
            sounds.
          </desc>
        </method>
      </category>
    </chapter>
  </body>
</gsdoc>
